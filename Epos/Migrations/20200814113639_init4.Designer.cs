// <auto-generated />
using System;
using Epos.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Epos.Migrations
{
    [DbContext(typeof(CoreDBContext))]
    [Migration("20200814113639_init4")]
    partial class init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Epos.Models.Conpany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConpanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConpanyRegNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConpanyVatNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Registed")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSite")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conpanys");
                });

            modelBuilder.Entity("Epos.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasCheckoutComplate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Order")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Epos.Models.ProductForCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MixAndMatch")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<int>("QTY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SN")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SnNeed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.ToTable("ProductForCart");
                });

            modelBuilder.Entity("Epos.Models.ProductForCart", b =>
                {
                    b.HasOne("Epos.Models.Orders", null)
                        .WithMany("Cart")
                        .HasForeignKey("OrdersId");
                });
#pragma warning restore 612, 618
        }
    }
}
